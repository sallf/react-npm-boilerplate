version: 2.1

orbs:
  aws-s3: circleci/aws-s3@1.0.15

workflows:
  version: 2
  build-deploy:
    jobs:
      - build-job
      - deploy-production:
          requires:
            - build-job
          context: AWS # Note: you need to setup a context on circleci with your aws keys
          filters:
            branches:
              only: master

jobs:
  build-job:
    working_directory: ~/build
    docker:
      - image: circleci/node:10.16.3
    steps:
      - run:
          name: versions
          command: |
            node --version
            npm --version
      - checkout
      - restore_cache:
          key: dependency-cache-v2-{{ checksum "package.json" }}
      - run:
          name: Install npm
          command: npm install
      - save_cache:
          key: dependency-cache-v2-{{ checksum "package.json" }}
          paths:
            - node_modules
      - store_artifacts:
          path: coverage/report-lcov/lcov.info
  deploy-production:
    working_directory: ~/build
    docker:
      - image: circleci/node:10.16.3
    steps:
      - run:
          name: versions
          command: |
            node --version
            npm --version
      - checkout # special step to check out source code to working directory
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache: # special step to restore the dependency cache
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: dependency-cache-v2-{{ checksum "package.json" }}
      - run:
          name: Install npm
          command: npm install
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-v2-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: npm run prod
          command: |
            npm run prod
            printenv CIRCLE_BUILD_NUM >> public/build_num.html
      - aws-s3/sync:
          arguments: |
            --acl public-read \
            --cache-control "max-age=86400"
          overwrite: true
          from: public
          to: 's3://your-s3-bucket.com'
